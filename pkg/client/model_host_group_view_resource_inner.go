/*
Seagate Management Controller (MC) OpenAPI

This API allows users to interact through the MC API to provision and manage storage.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the HostGroupViewResourceInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HostGroupViewResourceInner{}

// HostGroupViewResourceInner struct for HostGroupViewResourceInner
type HostGroupViewResourceInner struct {
	ObjectName *string `json:"object-name,omitempty"`
	Meta       *string `json:"meta,omitempty"`
	DurableId  *string `json:"durable-id,omitempty"`
	// Name of a Management Group
	GroupName        *string                         `json:"group-name,omitempty"`
	SerialNumber     *string                         `json:"serial-number,omitempty"`
	Status           []StatusResourceInner           `json:"status,omitempty"`
	HostViewMappings []HostViewMappingsResourceInner `json:"host-view-mappings,omitempty"`
}

// NewHostGroupViewResourceInner instantiates a new HostGroupViewResourceInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostGroupViewResourceInner() *HostGroupViewResourceInner {
	this := HostGroupViewResourceInner{}
	return &this
}

// NewHostGroupViewResourceInnerWithDefaults instantiates a new HostGroupViewResourceInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostGroupViewResourceInnerWithDefaults() *HostGroupViewResourceInner {
	this := HostGroupViewResourceInner{}
	return &this
}

// GetObjectName returns the ObjectName field value if set, zero value otherwise.
func (o *HostGroupViewResourceInner) GetObjectName() string {
	if o == nil || IsNil(o.ObjectName) {
		var ret string
		return ret
	}
	return *o.ObjectName
}

// GetObjectNameOk returns a tuple with the ObjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostGroupViewResourceInner) GetObjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectName) {
		return nil, false
	}
	return o.ObjectName, true
}

// HasObjectName returns a boolean if a field has been set.
func (o *HostGroupViewResourceInner) HasObjectName() bool {
	if o != nil && !IsNil(o.ObjectName) {
		return true
	}

	return false
}

// SetObjectName gets a reference to the given string and assigns it to the ObjectName field.
func (o *HostGroupViewResourceInner) SetObjectName(v string) {
	o.ObjectName = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *HostGroupViewResourceInner) GetMeta() string {
	if o == nil || IsNil(o.Meta) {
		var ret string
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostGroupViewResourceInner) GetMetaOk() (*string, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *HostGroupViewResourceInner) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given string and assigns it to the Meta field.
func (o *HostGroupViewResourceInner) SetMeta(v string) {
	o.Meta = &v
}

// GetDurableId returns the DurableId field value if set, zero value otherwise.
func (o *HostGroupViewResourceInner) GetDurableId() string {
	if o == nil || IsNil(o.DurableId) {
		var ret string
		return ret
	}
	return *o.DurableId
}

// GetDurableIdOk returns a tuple with the DurableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostGroupViewResourceInner) GetDurableIdOk() (*string, bool) {
	if o == nil || IsNil(o.DurableId) {
		return nil, false
	}
	return o.DurableId, true
}

// HasDurableId returns a boolean if a field has been set.
func (o *HostGroupViewResourceInner) HasDurableId() bool {
	if o != nil && !IsNil(o.DurableId) {
		return true
	}

	return false
}

// SetDurableId gets a reference to the given string and assigns it to the DurableId field.
func (o *HostGroupViewResourceInner) SetDurableId(v string) {
	o.DurableId = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *HostGroupViewResourceInner) GetGroupName() string {
	if o == nil || IsNil(o.GroupName) {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostGroupViewResourceInner) GetGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.GroupName) {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *HostGroupViewResourceInner) HasGroupName() bool {
	if o != nil && !IsNil(o.GroupName) {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *HostGroupViewResourceInner) SetGroupName(v string) {
	o.GroupName = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *HostGroupViewResourceInner) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostGroupViewResourceInner) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *HostGroupViewResourceInner) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *HostGroupViewResourceInner) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *HostGroupViewResourceInner) GetStatus() []StatusResourceInner {
	if o == nil || IsNil(o.Status) {
		var ret []StatusResourceInner
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostGroupViewResourceInner) GetStatusOk() ([]StatusResourceInner, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *HostGroupViewResourceInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given []StatusResourceInner and assigns it to the Status field.
func (o *HostGroupViewResourceInner) SetStatus(v []StatusResourceInner) {
	o.Status = v
}

// GetHostViewMappings returns the HostViewMappings field value if set, zero value otherwise.
func (o *HostGroupViewResourceInner) GetHostViewMappings() []HostViewMappingsResourceInner {
	if o == nil || IsNil(o.HostViewMappings) {
		var ret []HostViewMappingsResourceInner
		return ret
	}
	return o.HostViewMappings
}

// GetHostViewMappingsOk returns a tuple with the HostViewMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostGroupViewResourceInner) GetHostViewMappingsOk() ([]HostViewMappingsResourceInner, bool) {
	if o == nil || IsNil(o.HostViewMappings) {
		return nil, false
	}
	return o.HostViewMappings, true
}

// HasHostViewMappings returns a boolean if a field has been set.
func (o *HostGroupViewResourceInner) HasHostViewMappings() bool {
	if o != nil && !IsNil(o.HostViewMappings) {
		return true
	}

	return false
}

// SetHostViewMappings gets a reference to the given []HostViewMappingsResourceInner and assigns it to the HostViewMappings field.
func (o *HostGroupViewResourceInner) SetHostViewMappings(v []HostViewMappingsResourceInner) {
	o.HostViewMappings = v
}

func (o HostGroupViewResourceInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HostGroupViewResourceInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjectName) {
		toSerialize["object-name"] = o.ObjectName
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.DurableId) {
		toSerialize["durable-id"] = o.DurableId
	}
	if !IsNil(o.GroupName) {
		toSerialize["group-name"] = o.GroupName
	}
	if !IsNil(o.SerialNumber) {
		toSerialize["serial-number"] = o.SerialNumber
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.HostViewMappings) {
		toSerialize["host-view-mappings"] = o.HostViewMappings
	}
	return toSerialize, nil
}

type NullableHostGroupViewResourceInner struct {
	value *HostGroupViewResourceInner
	isSet bool
}

func (v NullableHostGroupViewResourceInner) Get() *HostGroupViewResourceInner {
	return v.value
}

func (v *NullableHostGroupViewResourceInner) Set(val *HostGroupViewResourceInner) {
	v.value = val
	v.isSet = true
}

func (v NullableHostGroupViewResourceInner) IsSet() bool {
	return v.isSet
}

func (v *NullableHostGroupViewResourceInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostGroupViewResourceInner(val *HostGroupViewResourceInner) *NullableHostGroupViewResourceInner {
	return &NullableHostGroupViewResourceInner{value: val, isSet: true}
}

func (v NullableHostGroupViewResourceInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostGroupViewResourceInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
