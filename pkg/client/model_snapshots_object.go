/*
Seagate Management Controller (MC) OpenAPI

This API allows users to interact through the MC API to provision and manage storage.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// SnapshotsObject struct for SnapshotsObject
type SnapshotsObject struct {
	Status    []StatusResourceInner    `json:"status,omitempty"`
	Snapshots []SnapshotsResourceInner `json:"snapshots,omitempty"`
}

// NewSnapshotsObject instantiates a new SnapshotsObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotsObject() *SnapshotsObject {
	this := SnapshotsObject{}
	return &this
}

// NewSnapshotsObjectWithDefaults instantiates a new SnapshotsObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotsObjectWithDefaults() *SnapshotsObject {
	this := SnapshotsObject{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SnapshotsObject) GetStatus() []StatusResourceInner {
	if o == nil || isNil(o.Status) {
		var ret []StatusResourceInner
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsObject) GetStatusOk() ([]StatusResourceInner, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SnapshotsObject) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given []StatusResourceInner and assigns it to the Status field.
func (o *SnapshotsObject) SetStatus(v []StatusResourceInner) {
	o.Status = v
}

// GetSnapshots returns the Snapshots field value if set, zero value otherwise.
func (o *SnapshotsObject) GetSnapshots() []SnapshotsResourceInner {
	if o == nil || isNil(o.Snapshots) {
		var ret []SnapshotsResourceInner
		return ret
	}
	return o.Snapshots
}

// GetSnapshotsOk returns a tuple with the Snapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsObject) GetSnapshotsOk() ([]SnapshotsResourceInner, bool) {
	if o == nil || isNil(o.Snapshots) {
		return nil, false
	}
	return o.Snapshots, true
}

// HasSnapshots returns a boolean if a field has been set.
func (o *SnapshotsObject) HasSnapshots() bool {
	if o != nil && !isNil(o.Snapshots) {
		return true
	}

	return false
}

// SetSnapshots gets a reference to the given []SnapshotsResourceInner and assigns it to the Snapshots field.
func (o *SnapshotsObject) SetSnapshots(v []SnapshotsResourceInner) {
	o.Snapshots = v
}

func (o SnapshotsObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Snapshots) {
		toSerialize["snapshots"] = o.Snapshots
	}
	return json.Marshal(toSerialize)
}

type NullableSnapshotsObject struct {
	value *SnapshotsObject
	isSet bool
}

func (v NullableSnapshotsObject) Get() *SnapshotsObject {
	return v.value
}

func (v *NullableSnapshotsObject) Set(val *SnapshotsObject) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotsObject) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotsObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotsObject(val *SnapshotsObject) *NullableSnapshotsObject {
	return &NullableSnapshotsObject{value: val, isSet: true}
}

func (v NullableSnapshotsObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotsObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
